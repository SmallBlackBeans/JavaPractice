<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hanxiaocu</groupId>
    <artifactId>SpringBootAll</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>SpringBoot-Basic</module>
        <module>SpringBoot-Test</module>
        <module>SpringBoot-Rest</module>
        <module>SpringBoot-MongoDB</module>
        <module>SpringBoot-Redis</module>
        <module>SpringBoot-ES</module>
        <module>SpringBoot-Cache</module>
        <module>SpringBoot-Session</module>
        <module>SpringBoot-ZooKeeper</module>
        <module>SpringBoot-Monitor</module>
        <module>SpringBoot-Mybatis</module>
        <module>SpringBoot-RabbitMQ</module>
        <module>SpringBoot-Docker</module>
        <module>SpringBoot-AsyncDev</module>
        <module>SpringBoot-Monitor</module>
        <module>SpringBoot-Dubbo</module>
        <module>SpringBoot-JPA</module>
        <module>SpringBoot-Mail</module>
        <module>SpringBoot-Log</module>
        <module>SpringBoot-AOP</module>
        <module>SpringBoot-TimingTask</module>
        <module>SpringBoot-WebApp</module>
        <module>SpringBoot-WebSocket</module>
        <module>SpringBoot-WebService</module>
    </modules>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-parent</artifactId>
        <version>2.0.1.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <meihaofenqi-provider-facade.version>1.0.1-SNAPSHOT</meihaofenqi-provider-facade.version>
    </properties>

    <!--
    scope: scope 代表此类库与项目的关系，
    默认是 compile，编译测试运行都有效 ,也就是编译和打包都需要此类库。
    mybatis 表示仅仅在单元测试的时候需要 ;
    provided 在编译和测试时有效,表示在编译阶段需要此类库，但打包阶段不需要，这是因为项目的目标环境己经提供了
    runtime 在测试和运行时有效,表示在编译和打包的 时候都不需要，但在运行的时候需要，比如某个指定的数据库驱动，编译和打包都不需要 ，但测试应用要连到数据库 时就需要此数据库驱动 。
    import：从其它的pom文件中导入依赖设置
    -->
    <!-- 使用dependencyManagement 元素为多项目依赖提供了一种管理依赖版本号的方式-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.SR7</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <!-- meihaofenqi -->
        <!--<dependency>-->
        <!--<groupId>com.meihaofenqi</groupId>-->
        <!--<artifactId>provider-facade</artifactId>-->
        <!--<version>${meihaofenqi-provider-facade.version}</version>-->
        <!--</dependency>-->

        <!--web 容器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.springframework.boot</groupId>-->
                    <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-jetty</artifactId>-->
        <!--</dependency>-->

        <!--&lt;!&ndash;Spring Cloud&ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-config</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-eureka</artifactId>-->
        <!--</dependency>-->

        <!--可以实现热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!--数据源提供者-->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>2.7.8</version>
        </dependency>

        <!--数据库驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.13</version>
        </dependency>

        <!--JDBC 事务 JPA-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>1.5.14.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
            <type>pom</type>
        </dependency>

        <!--date Hibernate jpa-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>2.0.4.RELEASE</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>javax.xml.bind</groupId>-->
        <!--<artifactId>jaxb-api</artifactId>-->
        <!--<version>2.3.0</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.hibernate.javax.persistence</groupId>-->
        <!--<artifactId>hibernate-jpa-2.2-api</artifactId>-->
        <!--<version>1.0.0.Beta2</version>-->
        <!--<type>pom</type>-->
        <!--</dependency>-->

        <!--redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>2.0.6.RELEASE</version>
        </dependency>

        <!--AOP切面-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--视图渲染-->
        <!--freemarker 模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
            <version>2.0.1.RELEASE</version>
        </dependency>

        <!--Beetl 模板引擎-->
        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl-framework-starter</artifactId>
            <version>1.1.67.RELEASE</version>
            <type>pom</type>
            <exclusions>
                <exclusion>
                    <groupId>com.ibeetl</groupId>
                    <artifactId>beetlsql</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--单元 测试-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.0.6.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.2</version>
        </dependency>

    </dependencies>




    <build>
        <finalName>example_hello</finalName>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <fork>true</fork>
                        <executable>true</executable>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                    <!--将-parameters参数添加到编译器中 参数名字保留在字节码中 还有idea java complier 中的配置-->
                    <compilerArgument>-parameters</compilerArgument>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://nexus.meihaofenqi.net/nexus/content/groups/public</url>
        </repository>

        <repository>
            <id>aliyun-maven</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>

        <repository>
            <id>offical</id>
            <name>Maven Official Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!--定义snapshots库和releases库的nexus地址-->
    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>Local Nexus Repository</name>
            <url>http://nexus.meihaofenqi.net/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Local Nexus Repository</name>
            <url>http://nexus.meihaofenqi.net/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>